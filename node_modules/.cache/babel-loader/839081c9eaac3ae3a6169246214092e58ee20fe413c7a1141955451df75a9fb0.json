{"ast":null,"code":"const express = require(\"express\");\nconst app = express();\nconst userRoutes = require(\"./routes/User\");\nconst profileRoutes = require(\"./routes/Profile\");\nconst paymentRoutes = require(\"./routes/Payments\");\nconst courseRoutes = require(\"./routes/Course\");\nconst database = require(\"./config/database\");\nconst cookieParser = require(\"cookie-parser\");\nconst cors = require(\"cors\");\nconst {\n  cloudinaryConnect\n} = require(\"./config/cloudinary\");\nconst fileUpload = require(\"express-fileupload\");\nrequire(\"dotenv\").config();\nconst PORT = process.env.PORT || 4000;\n\n//database connect\ndatabase.connect();\n//middlewares\napp.use(express.json());\napp.use(cookieParser());\napp.use(cors({\n  origin: \"http://localhost:3000\",\n  credentials: true\n}));\napp.use(fileUpload({\n  useTempFiles: true,\n  tempFileDir: \"/tmp\"\n}));\n//cloudinary connection\ncloudinaryConnect();\n\n//routes\napp.use(\"/api/v1/auth\", userRoutes);\napp.use(\"/api/v1/profile\", profileRoutes);\napp.use(\"/api/v1/course\", courseRoutes);\napp.use(\"/api/v1/payment\", paymentRoutes);\n\n//default route\napp.get(\"/\", (req, res) => {\n  return res.json({\n    success: true,\n    message: \"Your server is up and running....\"\n  });\n});\n\n//activate server\napp.listen(PORT, () => {\n  console.log(`App is running at ${PORT}`);\n});","map":{"version":3,"names":["express","require","app","userRoutes","profileRoutes","paymentRoutes","courseRoutes","database","cookieParser","cors","cloudinaryConnect","fileUpload","config","PORT","process","env","connect","use","json","origin","credentials","useTempFiles","tempFileDir","get","req","res","success","message","listen","console","log"],"sources":["C:/Users/gauta/OneDrive/Desktop/Web Dev/StudyNotion/server/index.js"],"sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\n\r\nconst userRoutes = require(\"./routes/User\");\r\nconst profileRoutes = require(\"./routes/Profile\");\r\nconst paymentRoutes = require(\"./routes/Payments\");\r\nconst courseRoutes = require(\"./routes/Course\");\r\n\r\nconst database = require(\"./config/database\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst cors = require(\"cors\");\r\nconst {cloudinaryConnect} = require(\"./config/cloudinary\");\r\nconst fileUpload = require(\"express-fileupload\");\r\nrequire(\"dotenv\").config();\r\n\r\nconst PORT = process.env.PORT || 4000;\r\n\r\n//database connect\r\ndatabase.connect();\r\n//middlewares\r\napp.use(express.json());\r\napp.use(cookieParser());\r\napp.use(\r\n    cors({\r\n        origin:\"http://localhost:3000\",\r\n        credentials:true,\r\n    })\r\n);\r\napp.use(\r\n    fileUpload({\r\n        useTempFiles:true,\r\n        tempFileDir:\"/tmp\",\r\n    })\r\n);\r\n//cloudinary connection\r\ncloudinaryConnect();\r\n\r\n//routes\r\napp.use(\"/api/v1/auth\", userRoutes);\r\napp.use(\"/api/v1/profile\", profileRoutes);\r\napp.use(\"/api/v1/course\", courseRoutes);\r\napp.use(\"/api/v1/payment\", paymentRoutes);\r\n\r\n//default route\r\napp.get(\"/\", (req,res) => {\r\n    return res.json({\r\n        success:true,\r\n        message:\"Your server is up and running....\",\r\n    })\r\n});\r\n\r\n//activate server\r\napp.listen(PORT, () => {\r\n    console.log(`App is running at ${PORT}`);\r\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,EAAE;AAErB,MAAMG,UAAU,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMG,aAAa,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAMI,aAAa,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAClD,MAAMK,YAAY,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAE/C,MAAMM,QAAQ,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAC7C,MAAMO,YAAY,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAACS;AAAiB,CAAC,GAAGT,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAMU,UAAU,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AAChDA,OAAO,CAAC,QAAQ,CAAC,CAACW,MAAM,EAAE;AAE1B,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;AAErC;AACAN,QAAQ,CAACS,OAAO,EAAE;AAClB;AACAd,GAAG,CAACe,GAAG,CAACjB,OAAO,CAACkB,IAAI,EAAE,CAAC;AACvBhB,GAAG,CAACe,GAAG,CAACT,YAAY,EAAE,CAAC;AACvBN,GAAG,CAACe,GAAG,CACHR,IAAI,CAAC;EACDU,MAAM,EAAC,uBAAuB;EAC9BC,WAAW,EAAC;AAChB,CAAC,CAAC,CACL;AACDlB,GAAG,CAACe,GAAG,CACHN,UAAU,CAAC;EACPU,YAAY,EAAC,IAAI;EACjBC,WAAW,EAAC;AAChB,CAAC,CAAC,CACL;AACD;AACAZ,iBAAiB,EAAE;;AAEnB;AACAR,GAAG,CAACe,GAAG,CAAC,cAAc,EAAEd,UAAU,CAAC;AACnCD,GAAG,CAACe,GAAG,CAAC,iBAAiB,EAAEb,aAAa,CAAC;AACzCF,GAAG,CAACe,GAAG,CAAC,gBAAgB,EAAEX,YAAY,CAAC;AACvCJ,GAAG,CAACe,GAAG,CAAC,iBAAiB,EAAEZ,aAAa,CAAC;;AAEzC;AACAH,GAAG,CAACqB,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAACC,GAAG,KAAK;EACtB,OAAOA,GAAG,CAACP,IAAI,CAAC;IACZQ,OAAO,EAAC,IAAI;IACZC,OAAO,EAAC;EACZ,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACAzB,GAAG,CAAC0B,MAAM,CAACf,IAAI,EAAE,MAAM;EACnBgB,OAAO,CAACC,GAAG,CAAE,qBAAoBjB,IAAK,EAAC,CAAC;AAC5C,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}